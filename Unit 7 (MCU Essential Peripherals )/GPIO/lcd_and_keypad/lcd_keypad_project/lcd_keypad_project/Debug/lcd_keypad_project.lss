
lcd_keypad_project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000368  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000006  00800060  00000368  000003dc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000003e2  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000414  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000090  00000000  00000000  00000450  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000b4b  00000000  00000000  000004e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000080d  00000000  00000000  0000102b  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000074f  00000000  00000000  00001838  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000d8  00000000  00000000  00001f88  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000413  00000000  00000000  00002060  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000358  00000000  00000000  00002473  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000090  00000000  00000000  000027cb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e8 e6       	ldi	r30, 0x68	; 104
  68:	f3 e0       	ldi	r31, 0x03	; 3
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a6 36       	cpi	r26, 0x66	; 102
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <main>
  7a:	0c 94 b2 01 	jmp	0x364	; 0x364 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <KEYBAD_INIT>:
  82:	81 b3       	in	r24, 0x11	; 17
  84:	92 b3       	in	r25, 0x12	; 18
  86:	8f 60       	ori	r24, 0x0F	; 15
  88:	92 bb       	out	0x12, r25	; 18
  8a:	81 bb       	out	0x11, r24	; 17
  8c:	81 b3       	in	r24, 0x11	; 17
  8e:	92 b3       	in	r25, 0x12	; 18
  90:	8f 70       	andi	r24, 0x0F	; 15
  92:	92 bb       	out	0x12, r25	; 18
  94:	81 bb       	out	0x11, r24	; 17
  96:	13 ba       	out	0x13, r1	; 19
  98:	12 ba       	out	0x12, r1	; 18
  9a:	08 95       	ret

0000009c <GET_KEY>:
  9c:	60 e0       	ldi	r22, 0x00	; 0
  9e:	70 e0       	ldi	r23, 0x00	; 0
  a0:	7e c0       	rjmp	.+252    	; 0x19e <GET_KEY+0x102>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  a2:	83 ed       	ldi	r24, 0xD3	; 211
  a4:	90 e3       	ldi	r25, 0x30	; 48
  a6:	01 97       	sbiw	r24, 0x01	; 1
  a8:	f1 f7       	brne	.-4      	; 0xa6 <GET_KEY+0xa>
  aa:	00 c0       	rjmp	.+0      	; 0xac <GET_KEY+0x10>
  ac:	00 00       	nop
  ae:	13 ba       	out	0x13, r1	; 19
  b0:	12 ba       	out	0x12, r1	; 18
  b2:	22 b3       	in	r18, 0x12	; 18
  b4:	33 b3       	in	r19, 0x13	; 19
  b6:	81 e0       	ldi	r24, 0x01	; 1
  b8:	90 e0       	ldi	r25, 0x00	; 0
  ba:	06 2e       	mov	r0, r22
  bc:	02 c0       	rjmp	.+4      	; 0xc2 <GET_KEY+0x26>
  be:	88 0f       	add	r24, r24
  c0:	99 1f       	adc	r25, r25
  c2:	0a 94       	dec	r0
  c4:	e2 f7       	brpl	.-8      	; 0xbe <GET_KEY+0x22>
  c6:	82 2b       	or	r24, r18
  c8:	93 2b       	or	r25, r19
  ca:	93 bb       	out	0x13, r25	; 19
  cc:	82 bb       	out	0x12, r24	; 18
  ce:	40 e0       	ldi	r20, 0x00	; 0
  d0:	50 e0       	ldi	r21, 0x00	; 0
  d2:	5f c0       	rjmp	.+190    	; 0x192 <GET_KEY+0xf6>
  d4:	80 b3       	in	r24, 0x10	; 16
  d6:	91 b3       	in	r25, 0x11	; 17
  d8:	21 e0       	ldi	r18, 0x01	; 1
  da:	30 e0       	ldi	r19, 0x00	; 0
  dc:	04 2e       	mov	r0, r20
  de:	02 c0       	rjmp	.+4      	; 0xe4 <GET_KEY+0x48>
  e0:	22 0f       	add	r18, r18
  e2:	33 1f       	adc	r19, r19
  e4:	0a 94       	dec	r0
  e6:	e2 f7       	brpl	.-8      	; 0xe0 <GET_KEY+0x44>
  e8:	22 95       	swap	r18
  ea:	32 95       	swap	r19
  ec:	30 7f       	andi	r19, 0xF0	; 240
  ee:	32 27       	eor	r19, r18
  f0:	20 7f       	andi	r18, 0xF0	; 240
  f2:	32 27       	eor	r19, r18
  f4:	82 23       	and	r24, r18
  f6:	93 23       	and	r25, r19
  f8:	89 2b       	or	r24, r25
  fa:	09 f4       	brne	.+2      	; 0xfe <GET_KEY+0x62>
  fc:	48 c0       	rjmp	.+144    	; 0x18e <GET_KEY+0xf2>
  fe:	80 b3       	in	r24, 0x10	; 16
 100:	91 b3       	in	r25, 0x11	; 17
 102:	82 23       	and	r24, r18
 104:	93 23       	and	r25, r19
 106:	89 2b       	or	r24, r25
 108:	d1 f7       	brne	.-12     	; 0xfe <GET_KEY+0x62>
 10a:	61 30       	cpi	r22, 0x01	; 1
 10c:	71 05       	cpc	r23, r1
 10e:	c9 f0       	breq	.+50     	; 0x142 <GET_KEY+0xa6>
 110:	24 f4       	brge	.+8      	; 0x11a <GET_KEY+0x7e>
 112:	61 15       	cp	r22, r1
 114:	71 05       	cpc	r23, r1
 116:	41 f0       	breq	.+16     	; 0x128 <GET_KEY+0x8c>
 118:	3a c0       	rjmp	.+116    	; 0x18e <GET_KEY+0xf2>
 11a:	62 30       	cpi	r22, 0x02	; 2
 11c:	71 05       	cpc	r23, r1
 11e:	f1 f0       	breq	.+60     	; 0x15c <GET_KEY+0xc0>
 120:	63 30       	cpi	r22, 0x03	; 3
 122:	71 05       	cpc	r23, r1
 124:	41 f1       	breq	.+80     	; 0x176 <GET_KEY+0xda>
 126:	33 c0       	rjmp	.+102    	; 0x18e <GET_KEY+0xf2>
 128:	41 15       	cp	r20, r1
 12a:	51 05       	cpc	r21, r1
 12c:	f1 f1       	breq	.+124    	; 0x1aa <GET_KEY+0x10e>
 12e:	41 30       	cpi	r20, 0x01	; 1
 130:	51 05       	cpc	r21, r1
 132:	e9 f1       	breq	.+122    	; 0x1ae <GET_KEY+0x112>
 134:	42 30       	cpi	r20, 0x02	; 2
 136:	51 05       	cpc	r21, r1
 138:	e1 f1       	breq	.+120    	; 0x1b2 <GET_KEY+0x116>
 13a:	43 30       	cpi	r20, 0x03	; 3
 13c:	51 05       	cpc	r21, r1
 13e:	39 f5       	brne	.+78     	; 0x18e <GET_KEY+0xf2>
 140:	3a c0       	rjmp	.+116    	; 0x1b6 <GET_KEY+0x11a>
 142:	41 15       	cp	r20, r1
 144:	51 05       	cpc	r21, r1
 146:	c9 f1       	breq	.+114    	; 0x1ba <GET_KEY+0x11e>
 148:	41 30       	cpi	r20, 0x01	; 1
 14a:	51 05       	cpc	r21, r1
 14c:	c1 f1       	breq	.+112    	; 0x1be <GET_KEY+0x122>
 14e:	42 30       	cpi	r20, 0x02	; 2
 150:	51 05       	cpc	r21, r1
 152:	b9 f1       	breq	.+110    	; 0x1c2 <GET_KEY+0x126>
 154:	43 30       	cpi	r20, 0x03	; 3
 156:	51 05       	cpc	r21, r1
 158:	d1 f4       	brne	.+52     	; 0x18e <GET_KEY+0xf2>
 15a:	35 c0       	rjmp	.+106    	; 0x1c6 <GET_KEY+0x12a>
 15c:	41 15       	cp	r20, r1
 15e:	51 05       	cpc	r21, r1
 160:	a1 f1       	breq	.+104    	; 0x1ca <GET_KEY+0x12e>
 162:	41 30       	cpi	r20, 0x01	; 1
 164:	51 05       	cpc	r21, r1
 166:	99 f1       	breq	.+102    	; 0x1ce <GET_KEY+0x132>
 168:	42 30       	cpi	r20, 0x02	; 2
 16a:	51 05       	cpc	r21, r1
 16c:	91 f1       	breq	.+100    	; 0x1d2 <GET_KEY+0x136>
 16e:	43 30       	cpi	r20, 0x03	; 3
 170:	51 05       	cpc	r21, r1
 172:	69 f4       	brne	.+26     	; 0x18e <GET_KEY+0xf2>
 174:	30 c0       	rjmp	.+96     	; 0x1d6 <GET_KEY+0x13a>
 176:	41 15       	cp	r20, r1
 178:	51 05       	cpc	r21, r1
 17a:	79 f1       	breq	.+94     	; 0x1da <GET_KEY+0x13e>
 17c:	41 30       	cpi	r20, 0x01	; 1
 17e:	51 05       	cpc	r21, r1
 180:	71 f1       	breq	.+92     	; 0x1de <GET_KEY+0x142>
 182:	42 30       	cpi	r20, 0x02	; 2
 184:	51 05       	cpc	r21, r1
 186:	69 f1       	breq	.+90     	; 0x1e2 <GET_KEY+0x146>
 188:	43 30       	cpi	r20, 0x03	; 3
 18a:	51 05       	cpc	r21, r1
 18c:	61 f1       	breq	.+88     	; 0x1e6 <GET_KEY+0x14a>
 18e:	4f 5f       	subi	r20, 0xFF	; 255
 190:	5f 4f       	sbci	r21, 0xFF	; 255
 192:	44 30       	cpi	r20, 0x04	; 4
 194:	51 05       	cpc	r21, r1
 196:	0c f4       	brge	.+2      	; 0x19a <GET_KEY+0xfe>
 198:	9d cf       	rjmp	.-198    	; 0xd4 <GET_KEY+0x38>
 19a:	6f 5f       	subi	r22, 0xFF	; 255
 19c:	7f 4f       	sbci	r23, 0xFF	; 255
 19e:	64 30       	cpi	r22, 0x04	; 4
 1a0:	71 05       	cpc	r23, r1
 1a2:	0c f4       	brge	.+2      	; 0x1a6 <GET_KEY+0x10a>
 1a4:	7e cf       	rjmp	.-260    	; 0xa2 <GET_KEY+0x6>
 1a6:	8e e6       	ldi	r24, 0x6E	; 110
 1a8:	08 95       	ret
 1aa:	87 e3       	ldi	r24, 0x37	; 55
 1ac:	08 95       	ret
 1ae:	88 e3       	ldi	r24, 0x38	; 56
 1b0:	08 95       	ret
 1b2:	89 e3       	ldi	r24, 0x39	; 57
 1b4:	08 95       	ret
 1b6:	8f e2       	ldi	r24, 0x2F	; 47
 1b8:	08 95       	ret
 1ba:	84 e3       	ldi	r24, 0x34	; 52
 1bc:	08 95       	ret
 1be:	85 e3       	ldi	r24, 0x35	; 53
 1c0:	08 95       	ret
 1c2:	86 e3       	ldi	r24, 0x36	; 54
 1c4:	08 95       	ret
 1c6:	8a e2       	ldi	r24, 0x2A	; 42
 1c8:	08 95       	ret
 1ca:	81 e3       	ldi	r24, 0x31	; 49
 1cc:	08 95       	ret
 1ce:	82 e3       	ldi	r24, 0x32	; 50
 1d0:	08 95       	ret
 1d2:	83 e3       	ldi	r24, 0x33	; 51
 1d4:	08 95       	ret
 1d6:	8d e2       	ldi	r24, 0x2D	; 45
 1d8:	08 95       	ret
 1da:	8f e3       	ldi	r24, 0x3F	; 63
 1dc:	08 95       	ret
 1de:	80 e3       	ldi	r24, 0x30	; 48
 1e0:	08 95       	ret
 1e2:	8d e3       	ldi	r24, 0x3D	; 61
 1e4:	08 95       	ret
 1e6:	8b e2       	ldi	r24, 0x2B	; 43
 1e8:	08 95       	ret

000001ea <LCD_ENABLE>:
 1ea:	8b b3       	in	r24, 0x1b	; 27
 1ec:	9c b3       	in	r25, 0x1c	; 28
 1ee:	84 60       	ori	r24, 0x04	; 4
 1f0:	9c bb       	out	0x1c, r25	; 28
 1f2:	8b bb       	out	0x1b, r24	; 27
 1f4:	83 ed       	ldi	r24, 0xD3	; 211
 1f6:	90 e3       	ldi	r25, 0x30	; 48
 1f8:	01 97       	sbiw	r24, 0x01	; 1
 1fa:	f1 f7       	brne	.-4      	; 0x1f8 <LCD_ENABLE+0xe>
 1fc:	00 c0       	rjmp	.+0      	; 0x1fe <LCD_ENABLE+0x14>
 1fe:	00 00       	nop
 200:	8b b3       	in	r24, 0x1b	; 27
 202:	9c b3       	in	r25, 0x1c	; 28
 204:	8b 7f       	andi	r24, 0xFB	; 251
 206:	9c bb       	out	0x1c, r25	; 28
 208:	8b bb       	out	0x1b, r24	; 27
 20a:	08 95       	ret

0000020c <LCD_WRITE_COMMAND>:
 20c:	90 e0       	ldi	r25, 0x00	; 0
 20e:	99 bb       	out	0x19, r25	; 25
 210:	88 bb       	out	0x18, r24	; 24
 212:	8b b3       	in	r24, 0x1b	; 27
 214:	9c b3       	in	r25, 0x1c	; 28
 216:	8d 7f       	andi	r24, 0xFD	; 253
 218:	9c bb       	out	0x1c, r25	; 28
 21a:	8b bb       	out	0x1b, r24	; 27
 21c:	8b b3       	in	r24, 0x1b	; 27
 21e:	9c b3       	in	r25, 0x1c	; 28
 220:	8e 7f       	andi	r24, 0xFE	; 254
 222:	9c bb       	out	0x1c, r25	; 28
 224:	8b bb       	out	0x1b, r24	; 27
 226:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LCD_ENABLE>
 22a:	08 95       	ret

0000022c <SET_CURSOR>:
 22c:	81 11       	cpse	r24, r1
 22e:	07 c0       	rjmp	.+14     	; 0x23e <SET_CURSOR+0x12>
 230:	60 31       	cpi	r22, 0x10	; 16
 232:	88 f4       	brcc	.+34     	; 0x256 <SET_CURSOR+0x2a>
 234:	80 e8       	ldi	r24, 0x80	; 128
 236:	86 0f       	add	r24, r22
 238:	0e 94 06 01 	call	0x20c	; 0x20c <LCD_WRITE_COMMAND>
 23c:	08 95       	ret
 23e:	81 30       	cpi	r24, 0x01	; 1
 240:	39 f4       	brne	.+14     	; 0x250 <SET_CURSOR+0x24>
 242:	60 31       	cpi	r22, 0x10	; 16
 244:	40 f4       	brcc	.+16     	; 0x256 <SET_CURSOR+0x2a>
 246:	80 ec       	ldi	r24, 0xC0	; 192
 248:	86 0f       	add	r24, r22
 24a:	0e 94 06 01 	call	0x20c	; 0x20c <LCD_WRITE_COMMAND>
 24e:	08 95       	ret
 250:	80 e8       	ldi	r24, 0x80	; 128
 252:	0e 94 06 01 	call	0x20c	; 0x20c <LCD_WRITE_COMMAND>
 256:	08 95       	ret

00000258 <LCD_WRITE_CHAR>:
 258:	90 e0       	ldi	r25, 0x00	; 0
 25a:	99 bb       	out	0x19, r25	; 25
 25c:	88 bb       	out	0x18, r24	; 24
 25e:	8b b3       	in	r24, 0x1b	; 27
 260:	9c b3       	in	r25, 0x1c	; 28
 262:	20 e2       	ldi	r18, 0x20	; 32
 264:	82 27       	eor	r24, r18
 266:	9c bb       	out	0x1c, r25	; 28
 268:	8b bb       	out	0x1b, r24	; 27
 26a:	8b b3       	in	r24, 0x1b	; 27
 26c:	9c b3       	in	r25, 0x1c	; 28
 26e:	8d 7f       	andi	r24, 0xFD	; 253
 270:	9c bb       	out	0x1c, r25	; 28
 272:	8b bb       	out	0x1b, r24	; 27
 274:	8b b3       	in	r24, 0x1b	; 27
 276:	9c b3       	in	r25, 0x1c	; 28
 278:	81 60       	ori	r24, 0x01	; 1
 27a:	9c bb       	out	0x1c, r25	; 28
 27c:	8b bb       	out	0x1b, r24	; 27
 27e:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LCD_ENABLE>
 282:	08 95       	ret

00000284 <LCD_WRITE_STRING>:
 284:	cf 93       	push	r28
 286:	df 93       	push	r29
 288:	ec 01       	movw	r28, r24
 28a:	03 c0       	rjmp	.+6      	; 0x292 <LCD_WRITE_STRING+0xe>
 28c:	21 96       	adiw	r28, 0x01	; 1
 28e:	0e 94 2c 01 	call	0x258	; 0x258 <LCD_WRITE_CHAR>
 292:	88 81       	ld	r24, Y
 294:	81 11       	cpse	r24, r1
 296:	fa cf       	rjmp	.-12     	; 0x28c <LCD_WRITE_STRING+0x8>
 298:	df 91       	pop	r29
 29a:	cf 91       	pop	r28
 29c:	08 95       	ret

0000029e <LCD_INIT>:
 29e:	87 ea       	ldi	r24, 0xA7	; 167
 2a0:	91 e6       	ldi	r25, 0x61	; 97
 2a2:	01 97       	sbiw	r24, 0x01	; 1
 2a4:	f1 f7       	brne	.-4      	; 0x2a2 <LCD_INIT+0x4>
 2a6:	00 c0       	rjmp	.+0      	; 0x2a8 <LCD_INIT+0xa>
 2a8:	00 00       	nop
 2aa:	8f ef       	ldi	r24, 0xFF	; 255
 2ac:	90 e0       	ldi	r25, 0x00	; 0
 2ae:	9b bb       	out	0x1b, r25	; 27
 2b0:	8a bb       	out	0x1a, r24	; 26
 2b2:	98 bb       	out	0x18, r25	; 24
 2b4:	87 bb       	out	0x17, r24	; 23
 2b6:	8b b3       	in	r24, 0x1b	; 27
 2b8:	9c b3       	in	r25, 0x1c	; 28
 2ba:	88 7f       	andi	r24, 0xF8	; 248
 2bc:	9c bb       	out	0x1c, r25	; 28
 2be:	8b bb       	out	0x1b, r24	; 27
 2c0:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LCD_ENABLE>
 2c4:	8f e0       	ldi	r24, 0x0F	; 15
 2c6:	0e 94 06 01 	call	0x20c	; 0x20c <LCD_WRITE_COMMAND>
 2ca:	88 e3       	ldi	r24, 0x38	; 56
 2cc:	0e 94 06 01 	call	0x20c	; 0x20c <LCD_WRITE_COMMAND>
 2d0:	80 e8       	ldi	r24, 0x80	; 128
 2d2:	0e 94 06 01 	call	0x20c	; 0x20c <LCD_WRITE_COMMAND>
 2d6:	08 95       	ret

000002d8 <main>:
#include <stdio.h>
#include "lcd.h"
#include "keypad.h"
int main(void)
{
	LCD_INIT();
 2d8:	0e 94 4f 01 	call	0x29e	; 0x29e <LCD_INIT>
	KEYBAD_INIT();
 2dc:	0e 94 41 00 	call	0x82	; 0x82 <KEYBAD_INIT>
	SET_CURSOR(0,5);
 2e0:	65 e0       	ldi	r22, 0x05	; 5
 2e2:	80 e0       	ldi	r24, 0x00	; 0
 2e4:	0e 94 16 01 	call	0x22c	; 0x22c <SET_CURSOR>
	LCD_WRITE_STRING("hello");
 2e8:	80 e6       	ldi	r24, 0x60	; 96
 2ea:	90 e0       	ldi	r25, 0x00	; 0
 2ec:	0e 94 42 01 	call	0x284	; 0x284 <LCD_WRITE_STRING>
	for(int i=9;i>=0;i--) //to turn on counter befor display 
 2f0:	c9 e0       	ldi	r28, 0x09	; 9
 2f2:	d0 e0       	ldi	r29, 0x00	; 0
 2f4:	12 c0       	rjmp	.+36     	; 0x31a <main+0x42>
	{
		SET_CURSOR(1,7);
 2f6:	67 e0       	ldi	r22, 0x07	; 7
 2f8:	81 e0       	ldi	r24, 0x01	; 1
 2fa:	0e 94 16 01 	call	0x22c	; 0x22c <SET_CURSOR>
		LCD_WRITE_CHAR(i+48);
 2fe:	8c 2f       	mov	r24, r28
 300:	80 5d       	subi	r24, 0xD0	; 208
 302:	0e 94 2c 01 	call	0x258	; 0x258 <LCD_WRITE_CHAR>
 306:	2f e3       	ldi	r18, 0x3F	; 63
 308:	8d e0       	ldi	r24, 0x0D	; 13
 30a:	93 e0       	ldi	r25, 0x03	; 3
 30c:	21 50       	subi	r18, 0x01	; 1
 30e:	80 40       	sbci	r24, 0x00	; 0
 310:	90 40       	sbci	r25, 0x00	; 0
 312:	e1 f7       	brne	.-8      	; 0x30c <main+0x34>
 314:	00 c0       	rjmp	.+0      	; 0x316 <main+0x3e>
 316:	00 00       	nop
{
	LCD_INIT();
	KEYBAD_INIT();
	SET_CURSOR(0,5);
	LCD_WRITE_STRING("hello");
	for(int i=9;i>=0;i--) //to turn on counter befor display 
 318:	21 97       	sbiw	r28, 0x01	; 1
 31a:	dd 23       	and	r29, r29
 31c:	64 f7       	brge	.-40     	; 0x2f6 <main+0x1e>
	{
		SET_CURSOR(1,7);
		LCD_WRITE_CHAR(i+48);
		_delay_ms(1000);
	}
	LCD_WRITE_COMMAND(0x01);
 31e:	81 e0       	ldi	r24, 0x01	; 1
 320:	0e 94 06 01 	call	0x20c	; 0x20c <LCD_WRITE_COMMAND>
	char x,i=1;
 324:	d1 e0       	ldi	r29, 0x01	; 1
	while (1) 
    { 
		x=GET_KEY();
 326:	0e 94 4e 00 	call	0x9c	; 0x9c <GET_KEY>
 32a:	c8 2f       	mov	r28, r24
		if(i==16) SET_CURSOR(1,0);
 32c:	d0 31       	cpi	r29, 0x10	; 16
 32e:	29 f4       	brne	.+10     	; 0x33a <main+0x62>
 330:	60 e0       	ldi	r22, 0x00	; 0
 332:	81 e0       	ldi	r24, 0x01	; 1
 334:	0e 94 16 01 	call	0x22c	; 0x22c <SET_CURSOR>
 338:	06 c0       	rjmp	.+12     	; 0x346 <main+0x6e>
		else if(i==32) {LCD_WRITE_COMMAND(0x01);i=1;}
 33a:	d0 32       	cpi	r29, 0x20	; 32
 33c:	21 f4       	brne	.+8      	; 0x346 <main+0x6e>
 33e:	81 e0       	ldi	r24, 0x01	; 1
 340:	0e 94 06 01 	call	0x20c	; 0x20c <LCD_WRITE_COMMAND>
 344:	d1 e0       	ldi	r29, 0x01	; 1
		switch(x)
 346:	cf 33       	cpi	r28, 0x3F	; 63
 348:	19 f0       	breq	.+6      	; 0x350 <main+0x78>
 34a:	ce 36       	cpi	r28, 0x6E	; 110
 34c:	61 f3       	breq	.-40     	; 0x326 <main+0x4e>
 34e:	05 c0       	rjmp	.+10     	; 0x35a <main+0x82>
		{
			case 'n' :break;
			case '?' :LCD_WRITE_COMMAND(0x01);i=1;break;
 350:	81 e0       	ldi	r24, 0x01	; 1
 352:	0e 94 06 01 	call	0x20c	; 0x20c <LCD_WRITE_COMMAND>
 356:	d1 e0       	ldi	r29, 0x01	; 1
 358:	e6 cf       	rjmp	.-52     	; 0x326 <main+0x4e>
			default: LCD_WRITE_CHAR(x);i++;
 35a:	8c 2f       	mov	r24, r28
 35c:	0e 94 2c 01 	call	0x258	; 0x258 <LCD_WRITE_CHAR>
 360:	df 5f       	subi	r29, 0xFF	; 255
 362:	e1 cf       	rjmp	.-62     	; 0x326 <main+0x4e>

00000364 <_exit>:
 364:	f8 94       	cli

00000366 <__stop_program>:
 366:	ff cf       	rjmp	.-2      	; 0x366 <__stop_program>
