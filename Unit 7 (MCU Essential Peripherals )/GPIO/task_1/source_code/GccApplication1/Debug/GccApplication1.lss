
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000fc  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000150  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000150  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000180  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000030  00000000  00000000  000001bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000630  00000000  00000000  000001ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000579  00000000  00000000  0000081c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000001ef  00000000  00000000  00000d95  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000044  00000000  00000000  00000f84  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000002d0  00000000  00000000  00000fc8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000070  00000000  00000000  00001298  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000038  00000000  00000000  00001308  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 4e 00 	call	0x9c	; 0x9c <main>
  64:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <GPIO_INIT>:
#define GPIOA_PORT *(volatile int *)(GPIO_BASE + 0X1B)


void GPIO_INIT()
{
	GPIOA_DDR|=0xff;;//set porta as an output
  6c:	8a b3       	in	r24, 0x1a	; 26
  6e:	9b b3       	in	r25, 0x1b	; 27
  70:	8f 6f       	ori	r24, 0xFF	; 255
  72:	9b bb       	out	0x1b, r25	; 27
  74:	8a bb       	out	0x1a, r24	; 26
  76:	08 95       	ret

00000078 <wait>:
}

void wait(int x)
{
	
	for(int i=0;i<=x;i++)
  78:	40 e0       	ldi	r20, 0x00	; 0
  7a:	50 e0       	ldi	r21, 0x00	; 0
  7c:	0b c0       	rjmp	.+22     	; 0x94 <wait+0x1c>
	for(int y=0;y<=500;y++);
  7e:	2f 5f       	subi	r18, 0xFF	; 255
  80:	3f 4f       	sbci	r19, 0xFF	; 255
  82:	02 c0       	rjmp	.+4      	; 0x88 <wait+0x10>
  84:	20 e0       	ldi	r18, 0x00	; 0
  86:	30 e0       	ldi	r19, 0x00	; 0
  88:	25 3f       	cpi	r18, 0xF5	; 245
  8a:	61 e0       	ldi	r22, 0x01	; 1
  8c:	36 07       	cpc	r19, r22
  8e:	bc f3       	brlt	.-18     	; 0x7e <wait+0x6>
}

void wait(int x)
{
	
	for(int i=0;i<=x;i++)
  90:	4f 5f       	subi	r20, 0xFF	; 255
  92:	5f 4f       	sbci	r21, 0xFF	; 255
  94:	84 17       	cp	r24, r20
  96:	95 07       	cpc	r25, r21
  98:	ac f7       	brge	.-22     	; 0x84 <wait+0xc>
	for(int y=0;y<=500;y++);
}
  9a:	08 95       	ret

0000009c <main>:
int main(void)
{
   GPIO_INIT();
  9c:	0e 94 36 00 	call	0x6c	; 0x6c <GPIO_INIT>
   int i=1;
  a0:	c1 e0       	ldi	r28, 0x01	; 1
  a2:	d0 e0       	ldi	r29, 0x00	; 0
  a4:	0c c0       	rjmp	.+24     	; 0xbe <main+0x22>
    while(1)
    {
		while(i<(1<<7))
		{
			GPIOA_PORT|=i;
  a6:	8b b3       	in	r24, 0x1b	; 27
  a8:	9c b3       	in	r25, 0x1c	; 28
  aa:	8c 2b       	or	r24, r28
  ac:	9d 2b       	or	r25, r29
  ae:	9c bb       	out	0x1c, r25	; 28
  b0:	8b bb       	out	0x1b, r24	; 27
		wait(30);i<<=1;}
  b2:	8e e1       	ldi	r24, 0x1E	; 30
  b4:	90 e0       	ldi	r25, 0x00	; 0
  b6:	0e 94 3c 00 	call	0x78	; 0x78 <wait>
  ba:	cc 0f       	add	r28, r28
  bc:	dd 1f       	adc	r29, r29
{
   GPIO_INIT();
   int i=1;
    while(1)
    {
		while(i<(1<<7))
  be:	c0 38       	cpi	r28, 0x80	; 128
  c0:	d1 05       	cpc	r29, r1
  c2:	8c f3       	brlt	.-30     	; 0xa6 <main+0xa>
		{
			GPIOA_PORT|=i;
		wait(30);i<<=1;}
		wait(70);
  c4:	86 e4       	ldi	r24, 0x46	; 70
  c6:	90 e0       	ldi	r25, 0x00	; 0
  c8:	0e 94 3c 00 	call	0x78	; 0x78 <wait>
		while(i>=1)
  cc:	0f c0       	rjmp	.+30     	; 0xec <main+0x50>
		{
			GPIOA_PORT&=~i;
  ce:	2b b3       	in	r18, 0x1b	; 27
  d0:	3c b3       	in	r19, 0x1c	; 28
  d2:	ce 01       	movw	r24, r28
  d4:	80 95       	com	r24
  d6:	90 95       	com	r25
  d8:	82 23       	and	r24, r18
  da:	93 23       	and	r25, r19
  dc:	9c bb       	out	0x1c, r25	; 28
  de:	8b bb       	out	0x1b, r24	; 27
			wait(30);i>>=1;}
  e0:	8e e1       	ldi	r24, 0x1E	; 30
  e2:	90 e0       	ldi	r25, 0x00	; 0
  e4:	0e 94 3c 00 	call	0x78	; 0x78 <wait>
  e8:	d5 95       	asr	r29
  ea:	c7 95       	ror	r28
		while(i<(1<<7))
		{
			GPIOA_PORT|=i;
		wait(30);i<<=1;}
		wait(70);
		while(i>=1)
  ec:	1c 16       	cp	r1, r28
  ee:	1d 06       	cpc	r1, r29
  f0:	74 f3       	brlt	.-36     	; 0xce <main+0x32>
		{
			GPIOA_PORT&=~i;
			wait(30);i>>=1;}
			i=1;
  f2:	c1 e0       	ldi	r28, 0x01	; 1
  f4:	d0 e0       	ldi	r29, 0x00	; 0
  f6:	e3 cf       	rjmp	.-58     	; 0xbe <main+0x22>

000000f8 <_exit>:
  f8:	f8 94       	cli

000000fa <__stop_program>:
  fa:	ff cf       	rjmp	.-2      	; 0xfa <__stop_program>
